--****SU DUNG TAI KHOAN BTL1M1 DANG NHAP THUC HIEN CAC THAO TAC****

--1 Viet function hien thi xac dinh nut cua kenh 'silver 100 sub, gold 1000 sub, diamond 10000 sub'.
CREATE OR REPLACE FUNCTION GET_AWARD (VCHANNELID IN VARCHAR2)
RETURN VARCHAR2
IS
  TOTAL_SUB NUMBER := 0;
  AWARD VARCHAR2(25) := 'NONE';
  NUM NUMBER;
BEGIN
  SELECT COUNT(*) INTO NUM FROM CHANNEL CH
  WHERE CH.CHANNELID=VCHANNELID;
  
  IF (NUM>0) THEN
    SELECT COUNT(*) INTO TOTAL_SUB 
    FROM CHANNEL CH, SUBSCRIBE S
    WHERE CH.CHANNELID=S.CHANNELID AND CH.CHANNELID=VCHANNELID
    GROUP BY CH.CHANNELID;
  ELSE
    SELECT COUNT(*) INTO NUM FROM BTL1M2.CHANNEL@DBL_M2 CH
    WHERE CH.CHANNELID=VCHANNELID;
    
    IF(NUM>0) THEN
      SELECT COUNT(*) INTO TOTAL_SUB 
      FROM BTL1M2.CHANNEL@DBL_M2 CH, BTL1M2.SUBSCRIBE@DBL_M2 S
      WHERE CH.CHANNELID=S.CHANNELID AND CH.CHANNELID=VCHANNELID
      GROUP BY CH.CHANNELID;
    ELSE
      RETURN 'NOT FOUND CHANNELID';
    END IF;
  END IF;
  
  IF TOTAL_SUB >= 5 THEN 
    AWARD := 'SILVER';
  END IF;
  
  IF TOTAL_SUB >= 10 THEN 
    AWARD := 'GOLD';
  END IF;
  
  IF TOTAL_SUB >= 15 THEN 
    AWARD := 'DIAMOND';
  END IF;

  RETURN AWARD;
END;

--run test
SET SERVEROUTPUT ON;
DECLARE 
   V_CHANNELID VARCHAR2(10) := 'ch012';
   AWARD VARCHAR2(25);
BEGIN 
  AWARD := GET_AWARD(V_CHANNELID);
  DBMS_OUTPUT.PUT_LINE(AWARD);  
END;

SELECT CHANNELID, CNAME, GET_AWARD(CHANNELID) FROM CHANNEL
UNION 
SELECT CHANNELID, CNAME, GET_AWARD(CHANNELID) FROM BTL1M2.CHANNEL@DBL_M2;

--2 Viet procedure cap nhat tien quang cao kiem duoc cua tung video trong nam dua theo channelid dua theo cac tieu chi sao 
--(channel <= sivler 1 like = 100$)
--(channel >= gold  1 like = 70$)

CREATE OR REPLACE PROCEDURE ADD_CASH_PER_YEAR (VCHANNELID  IN VARCHAR2)
IS
  CH_IS_EXISTS NUMBER;
  CASH_AMOUNT NUMBER;
BEGIN
  SELECT COUNT(*) INTO CH_IS_EXISTS FROM CHANNEL CH
  WHERE CH.CHANNELID=VCHANNELID;
  
  IF (CH_IS_EXISTS > 0) THEN
    CASH_AMOUNT := CASE GET_AWARD(VCHANNELID) 
            WHEN 'NONE' THEN 100 WHEN 'SILVER' THEN 100 WHEN 'GOLD' THEN 70 WHEN 'DIAMOND' THEN 70  END;
            
    FOR R_VIDEO IN (
                                SELECT V.VIDEOID, COUNT(*) AS LIKES
                                FROM  LIKEVIDEO LV, VIDEO V  
                                WHERE V.CHANNELID=VCHANNELID AND LV.VIDEOID = V.VIDEOID
                                  AND EXTRACT(YEAR FROM LV.CREATED) = EXTRACT(YEAR FROM SYSDATE) - 1
                                GROUP BY V.VIDEOID
                              ) 
    LOOP
          UPDATE VIDEODETAILS SET CASH = CASH + R_VIDEO.LIKES * CASH_AMOUNT WHERE VIDEOID=R_VIDEO.VIDEOID;
    END LOOP;
  ELSE
    SELECT COUNT(*) INTO CH_IS_EXISTS FROM BTL1M2.CHANNEL@DBL_M2 CH
    WHERE CH.CHANNELID=VCHANNELID;
  
    IF (CH_IS_EXISTS > 0) THEN
      CASH_AMOUNT := CASE GET_AWARD(VCHANNELID) 
            WHEN 'NONE' THEN 100 WHEN 'SILVER' THEN 100 WHEN 'GOLD' THEN 70 WHEN 'DIAMOND' THEN 70 END;
      
    FOR R_VIDEO IN (
                                SELECT V.VIDEOID, COUNT(*) AS LIKES
                                FROM  BTL1M2.LIKEVIDEO@DBL_M2 LV, BTL1M2.VIDEO@DBL_M2 V  
                                WHERE V.CHANNELID=VCHANNELID AND LV.VIDEOID = V.VIDEOID
                                   AND EXTRACT(YEAR FROM LV.CREATED) = EXTRACT(YEAR FROM SYSDATE) - 1
                                GROUP BY V.VIDEOID
                              ) 
      LOOP
          UPDATE BTL1M2.VIDEODETAILS@DBL_M2 SET CASH = CASH + R_VIDEO.LIKES * CASH_AMOUNT WHERE VIDEOID=R_VIDEO.VIDEOID;
      END LOOP;
    END IF;
  END IF;
END ADD_CASH_PER_YEAR;


--Kiem tra lai
SELECT CH.CHANNELID, CASH 
FROM VIDEODETAILS VD, VIDEO V, LIKEVIDEO LV, CHANNEL CH
WHERE VD.VIDEOID=V.VIDEOID AND V.CHANNELID=CH.CHANNELID AND CH.CHANNELID = 'ch003'
UNION
SELECT CH.CHANNELID, CASH 
FROM BTL1M2.VIDEODETAILS@DBL_M2 VD, BTL1M2.VIDEO@DBL_M2 V, BTL1M2.CHANNEL@DBL_M2 CH
WHERE VD.VIDEOID=V.VIDEOID AND V.CHANNELID=CH.CHANNELID  AND CH.CHANNELID = 'ch003';

--Thuc hien procedure
EXEC ADD_CASH_PER_YEAR('ch003');
SELECT * FROM VIDEODETAILS WHERE
ROLLBACK;


--Rang buoc toan ven: ngay tao user account phai truoc ngay tao channel
CREATE OR REPLACE TRIGGER CREATED_DATE_CHANNEL
BEFORE INSERT OR UPDATE 
ON CHANNEL
FOR EACH ROW
DECLARE
  ACC_CREATED_DATE DATE;
BEGIN
  SELECT REGDAY INTO ACC_CREATED_DATE FROM USERACCOUNT WHERE USERID=:NEW.OWNERID;
  IF :NEW.CREATED < ACC_CREATED_DATE THEN
    RAISE_APPLICATION_ERROR(-20000, 'Ngay tao kenh (' || :NEW.CREATED || ') truoc ngay tao tai khoan (' || ACC_CREATED_DATE || ')');
  END IF;
END CREATED_DATE_CHANNEL;

CREATE OR REPLACE TRIGGER REGDAY_USERACCOUNT
BEFORE UPDATE
ON USERACCOUNT
FOR EACH ROW
DECLARE
  CH_CREATED_DATE DATE;
BEGIN
  IF UPDATING('REGDAY') THEN
    FOR R_CHANNEL IN (SELECT * FROM CHANNEL WHERE OWNERID = :NEW.USERID)
    LOOP
      IF :NEW.REGDAY > R_CHANNEL.CREATED THEN
        RAISE_APPLICATION_ERROR(-20000, 'Ngay dang ky (' || :NEW.REGDAY || ') sau ngay tao kenh '''|| R_CHANNEL.CNAME ||''' (' || R_CHANNEL.CREATED || ')');
      END IF;
    END LOOP;
  END IF;
END REGDAY_USERACCOUNT;

--Kiem tra lai ket qua
ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MM-YYYY';
SELECT USERID, REGDAY FROM USERACCOUNT WHERE USERID = 'u001';
SELECT CHANNELID, OWNERID, CREATED FROM CHANNEL WHERE OWNERID='u001';

UPDATE CHANNEL SET CREATED='12-06-2018' WHERE CHANNELID='ch001';
INSERT INTO CHANNEL VALUES('ch050','Test Channel','u001','Viet Nam','12-6-2018');

UPDATE USERACCOUNT SET REGDAY='12-8-2020' WHERE USERID='u001';
